Kiefer Lord
20 April 2022

===== id_rsa_homework.pub =====

-----BEGIN PUBLIC KEY-----
MIIBojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEAsV2FiH/CBy03gm6+tuYp
NW3YAYeOgWdNnvAXw89mJUv9QgwAF/WkghzQROAQBowvM5RJ7jzyAce6DHUI0uOH
Ot62CO/JX3BB0VMcJC9IefjFAIrbq3xvN9SFWdni+FLpq296qEBH9fuY6vGdSqGA
3fFaKlrMMiY0v317fk1NncOkXj82eMw/lp/4H8mgBAFDRr4VPGLMkXVoypGktF9h
761uVl1rUWzsnDWF0g2JowLH7eTDBAF2WZzaLQm8Ay8xyh28Co+jZlxdIbZhYvoV
XhaPtfbW3QqH7Yl+2vgjE1dxGfQ6sas/9r+Ta252UX6HuQHrOX0nHtKn1hm4Lr7X
f4IK0id7rouEnz2/fAg9S9wXZF8WIGg1T/5lPMb43G4UDnFG2iD926JEjqTIav9E
Iz8QQGAQzM5wxfRdQ35MO6sNU35ucN5qNUj2H/B5B2TkqQoMvGc9mn9T6ZvbnKFA
O0Yp5dMjtriXm3w2rQ2eZYVWk9sHZFRFkNqdjQIcIOoJAgMBAAE=
-----END PUBLIC KEY-----

===== id_rsa_homework =====

-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----

===== Private Key =====

According to RFC8017, the private key file contains the following information,
along with some metadata (length) at the beginning:

RSAPrivateKey ::= SEQUENCE {
             version           Version,
             modulus           INTEGER,  -- n
             publicExponent    INTEGER,  -- e
             privateExponent   INTEGER,  -- d
             prime1            INTEGER,  -- p
             prime2            INTEGER,  -- q
             exponent1         INTEGER,  -- d mod (p-1)
             exponent2         INTEGER,  -- d mod (q-1)
             coefficient       INTEGER,  -- (inverse of q) mod p
             otherPrimeInfos   OtherPrimeInfos OPTIONAL
         }

   The fields of type RSAPrivateKey have the following meanings:

   o  version is the version number, for compatibility with future
      revisions of this document.  It SHALL be 0 for this version of the
      document, unless multi-prime is used; in which case, it SHALL be
      1.

            Version ::= INTEGER { two-prime(0), multi(1) }
               (CONSTRAINED BY
               {-- version must be multi if otherPrimeInfos present --})

   o  modulus is the RSA modulus n.

   o  publicExponent is the RSA public exponent e.

   o  privateExponent is the RSA private exponent d.

   o  prime1 is the prime factor p of n.

   o  prime2 is the prime factor q of n.

   o  exponent1 is d mod (p - 1).

   o  exponent2 is d mod (q - 1).

   o  coefficient is the CRT coefficient q^(-1) mod p.


To decode the private key, I pasted the contents of the file into Lapo Luchini's ASN.1 decoder.
The key contains the following integers:
1. The length of the key, which is 4+1764.
2. Version = 0
3. The modulus n, which has length 4+385
4. The public exponent e, which has value 65537
5. The private exponent d
d =

6. The first prime p:
p = 2173166531365353569213513985899618990775340788809508868336466197804997595252508230655268310923486574707690241295066002188258440366424861590158747524674167850260559309842200269589795347627869151688153316226966665384221284425486154627259705419278206947731117779221864156890892205038429225363365968904369203296095640121824127358328780468235724669862355284809192582277889037138870968016757473723284929418909635667816518970814070004955151417577079916380581494079099213

7. The second prime q:
q = 1852176673681863111564310474259369230519813187111689300503167229762859481059847601570133419800567822328224157673891444856211039783377504568446611026937078255366356858603628543381062521169830919931181115807032886220249922705350754070634647817125353004590811795163077204518946476907652442347946344786786624600902569188949832336753820317814272981906423385246973087087703375911937477083739704172949128716436885100347506207999900650417223496482124365896620162100075949

8. d mod (p-1), which has length 3+193
9. d mod (q-1), which has length 3+193
10. The CRT coefficient q^(-1) mod p, which has length 3+192


===== PUBLIC KEY =====
To decode this, I had to convert the .pub file to the .pem format.
The public key has the following structure:

RSAPublicKey ::= SEQUENCE {
             modulus           INTEGER,  -- n
             publicExponent    INTEGER   -- e
         }

   The fields of type RSAPublicKey have the following meanings:

   o  modulus is the RSA modulus n.

   o  publicExponent is the RSA public exponent e.

It also has a string, which is the format identifier. In this case, the
Identifier is 1.2.840.113549.1.1.1, which is RSA.

Next, there is a sequence of 2 integers

n = 4025088357421032814318761259320776754821525840729929426042918289426797845415136087966348893837649170341720771029583292188627857653302143101523140536792233486415713263874267613896074342861141623093657101295857458684609009223674246637179265355867714073297819000682440438602804478262662462363622059846185410269103628143741956658045755511809764819282885638701727644815335824174771325583095919708541265941076699758768704612354852433916442235466332491124615126042079644505281426795877280034001133797390671708086609845061038392585897421047594344206310000931165600614264320397706900403982465686287503025532317218285167655238693275775636753397208637193090481299828978179479454363893260018412630121692351919312866627299940131985892518665057743028330298960453212819745975316325081657057580011093236023710302991145315854331067288279929864481169828265345657698023457335572244977922085258820941265826998007170601995656060365936240806128137

e = 65537


===== SANTIY CHECK =====

I used python to compute lambda=lcm(p-1, q-1), and then computed (e * d) % lambda = 1.
Also, p * q = n, as expected.
